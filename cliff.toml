# git-cliff ~ default configuration file
# https://git-cliff.org/docs/configuration
#
# Lines starting with "#" are comments.
# Configuration options are organized into tables and keys.
# See documentation for more information on available options.

[remote.github]
owner = "casimir"
repo = "frigoligo"

[changelog]
output = "CHANGELOG.md"
# template for the changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.

See [changelogs](https://github.com/casimir/frigoligo/tree/main/fastlane/metadata/android/en-US/changelogs) for a more high level list of changes.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\

{% for group, commits in commits | group_by(attribute="group") %}

    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits | unique(attribute="message") %}
        - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
            {% if commit.breaking %}[**breaking**] {% endif %}\
            {{ commit.message | upper_first }} \
            ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))\
    {% endfor %}\
{% endfor %}\

{% if previous.version %}

    {% if version %}\
        **Full Changelog**: [{{ previous.version }}..{{ version }}]({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }})
    {% else %}\
        **Full Changelog**: [{{ previous.version }}..HEAD]({{ self::remote_url() }}/compare/{{ previous.version }}..HEAD)
    {% endif %}

{% endif %}\
"""
# template for the changelog footer
footer = """

<!-- generated by git-cliff -->
"""
# remove the leading and trailing s
trim = true
# postprocessors
postprocessors = [
  # { pattern = '<REPO>', replace = "https://github.com/orhun/git-cliff" }, # replace repository URL
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/casimir/frigoligo/pull/${2}))"},
  { pattern = '^Translated using Weblate', replace_command = 'head -n 1'},
  { pattern = '^Translated using Weblate \((.+)\)', replace = 'Update translations: ${1}'},
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^feat", group = "<!-- 0 -->🚀 Features" },
  { message = "^fix", group = "<!-- 1 -->🐛 Bug Fixes" },
  { message = "^doc", group = "<!-- 3 -->📚 Documentation" },
  { message = "^perf", group = "<!-- 4 -->⚡ Performance" },
  { message = "^refactor", group = "<!-- 2 -->🚜 Refactor" },
  { message = "^style", group = "<!-- 5 -->🎨 Styling" },
  { message = "^test", group = "<!-- 6 -->🧪 Testing" },
  { message = "^Update translations: ", group = "<!-- 7 -->🌐 Translations" },
  { message = "Translations update from Hosted Weblate", skip = true },
  { message = "Automated changelog update", skip = true },
  { message = "^chore\\(release\\): prepare for", skip = true },
  { message = "^chore\\(deps.*\\)", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore|^ci|^shore", group = "<!-- 8 -->⚙️ Miscellaneous Tasks" },
  { body = ".*security", group = "<!-- 9 -->🛡️ Security" },
  { message = "^revert", group = "<!-- 10 -->◀️ Revert" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
