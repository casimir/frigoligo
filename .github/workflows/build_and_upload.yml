name: build and upload artifacts
on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:

env:
  VERSION: ${{ github.head_ref ||  github.ref_name }}

jobs:
  build_apk:
    runs-on: ubuntu-latest
    env:
      ARTIFACT: frigoligo-${{ github.head_ref ||  github.ref_name }}.apk
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "keystore.jks"
          fileDir: "${{ github.workspace }}/"
          encodedString: ${{ secrets.KEYSTORE_B64 }}
      - name: Prepare keystore file
        run: |
          echo "storeFile=${{ github.workspace }}/keystore.jks" > $KEYSTORE_PROPERTIES_PATH
          echo "keyAlias=frigoligo" >> $KEYSTORE_PROPERTIES_PATH
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> $KEYSTORE_PROPERTIES_PATH
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> $KEYSTORE_PROPERTIES_PATH
        env:
          KEYSTORE_PROPERTIES_PATH: ${{ github.workspace }}/android/keystore.properties
      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      - run: echo "version=$(cat .flutter-version)" >> $GITHUB_OUTPUT
        id: flutter-version
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ steps.flutter-version.outputs.version }}
          cache: true
      - run: flutter config --no-analytics
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.75.0
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d
      - run: echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> "$GITHUB_ENV"
      - run: flutter pub get
      - run: ./third_party_sources/build.sh
      - run: flutter test
      - run: flutter build apk
        env:
          NO_SIGNING: true
      - run: cp build/app/outputs/flutter-apk/app-release.apk $ARTIFACT
      - run: ./tools/verify_apk_cert.sh $ARTIFACT
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}
          overwrite: true
      - if: ${{ github.ref_type == 'tag' }}
        run: gh release upload $VERSION $ARTIFACT --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_abi_apks:
    runs-on: ubuntu-latest
    env:
      ARTIFACT: frigoligo-${{ github.head_ref ||  github.ref_name }}-per-abi-apks
    steps:
      - uses: actions/checkout@v4
      - uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "keystore.jks"
          fileDir: "${{ github.workspace }}/"
          encodedString: ${{ secrets.KEYSTORE_B64 }}
      - name: Prepare keystore file
        run: |
          echo "storeFile=${{ github.workspace }}/keystore.jks" > $KEYSTORE_PROPERTIES_PATH
          echo "keyAlias=frigoligo" >> $KEYSTORE_PROPERTIES_PATH
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> $KEYSTORE_PROPERTIES_PATH
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> $KEYSTORE_PROPERTIES_PATH
        env:
          KEYSTORE_PROPERTIES_PATH: ${{ github.workspace }}/android/keystore.properties
      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      - run: echo "version=$(cat .flutter-version)" >> $GITHUB_OUTPUT
        id: flutter-version
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ steps.flutter-version.outputs.version }}
          cache: true
      - run: flutter config --no-analytics
      - run: flutter pub get
      - run: flutter test
      - run: flutter build apk --release --split-per-abi
      - name: Rename APKs to release format
        run: |
          for apk in build/app/outputs/flutter-apk/*-release.apk; do
            abi=$(basename $apk | sed -r 's/^app-(.+)-release.apk$/\1/')
            mv $apk build/app/outputs/flutter-apk/frigoligo-${{ github.head_ref ||  github.ref_name }}-$abi.apk
          done
      - run: ./tools/verify_apk_cert.sh build/app/outputs/flutter-apk/*.apk
      - name: Upload APKs to the job artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: build/app/outputs/flutter-apk/*.apk
          overwrite: true
      - if: ${{ github.ref_type == 'tag' }}
        name: Upload APKs to the tag release
        uses: AButler/upload-release-assets@v3.0
        with:
          files: build/app/outputs/flutter-apk/*.apk
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ env.VERSION }}

  build_linux:
    runs-on: ubuntu-latest
    env:
      ARCH: x86_64
      ARTIFACT: frigoligo-${{ github.head_ref ||  github.ref_name }}-linux-x64.tar.gz
    outputs:
      artifact: ${{ env.ARTIFACT }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "version=$(cat .flutter-version)" >> $GITHUB_OUTPUT
        id: flutter-version
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ steps.flutter-version.outputs.version }}
          cache: true
      - run: flutter config --no-analytics
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter pub get
      - run: flutter test
      - run: flutter build linux
      - run: cp -R build/linux/x64/release/bundle/ build/frigoligo/
      - run: tar czf ../$ARTIFACT frigoligo/
        working-directory: ./build
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}
          overwrite: true
      - if: ${{ github.ref_type == 'tag' }}
        run: gh release upload $VERSION $ARTIFACT --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_appimage:
    needs: build_linux
    runs-on: ubuntu-latest
    env:
      ARTIFACT: Frigoligo-${{ github.head_ref ||  github.ref_name }}-x86_64.AppImage
      LINUX_ARTIFACT: ${{ needs.build_linux.outputs.artifact }}
    steps:
      - name: Install native dependencies
        run: |
          sudo apt update -y
          sudo apt install libfuse2
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            appimage
            assets
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.LINUX_ARTIFACT }}
      - name: Prepare AppImage
        run: |
          tar xzf ../$LINUX_ARTIFACT
          mv frigoligo/ Frigoligo.AppDir
          cp AppRun Frigoligo.AppDir/
          cp Frigoligo.desktop Frigoligo.AppDir/
          cp ../assets/logos/frigoligo.png Frigoligo.AppDir/
        working-directory: ./appimage
      - name: Build AppImage
        run: |
          wget -q "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool-x86_64.AppImage
          ./appimagetool-x86_64.AppImage Frigoligo.AppDir $ARTIFACT
        working-directory: ./appimage
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: appimage/${{ env.ARTIFACT }}
          overwrite: true
      - if: ${{ github.ref_type == 'tag' }}
        run: gh release upload $VERSION $ARTIFACT --clobber
        working-directory: ./appimage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_windows:
    runs-on: windows-latest
    env:
      ARTIFACT: frigoligo-${{ github.head_ref ||  github.ref_name }}-win-x64.zip
    steps:
      - uses: actions/checkout@v4
      - run: echo "version=$(cat .flutter-version)" >> $GITHUB_OUTPUT
        id: flutter-version
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ steps.flutter-version.outputs.version }}
          cache: true
      - run: flutter config --no-analytics
      - run: flutter pub get
      - run: flutter test
      - run: flutter build windows
      - run: Copy-Item -Path build\windows\x64\runner\Release\ -Destination build\frigoligo\ -Recurse
      - run: Compress-Archive -Path frigoligo -DestinationPath ..\\$env:ARTIFACT
        working-directory: ./build
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}
          overwrite: true
      - if: ${{ github.ref_type == 'tag' }}
        run: gh release upload $env:VERSION $env:ARTIFACT --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
